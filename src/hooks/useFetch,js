import { useState, useEffect, useCallback } from 'react';
import fetchData from '../utils/fetchData';

const useFetch = (url) => {
    const [data, setData] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    const [fetchTrigger, setFetchTrigger] = useState(0);

    const triggerFetch = useCallback(() => {
        setFetchTrigger(prev => prev + 1);
    }, []);

    useEffect(() => {
        const fetchingData = async () => {
            try {
                const response = await fetchData(url)
                console.log({ response })
                setData(response);
            } catch (error) {
                setError(error.message || error);
            } finally {
                setLoading(false);
            }
        };

        fetchingData();
    }, [url, fetchTrigger]);

    return { data, loading, error, refresh: () => triggerFetch() };
};

export default useFetch;
